///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                          Knowledge Map Web Application for Research                                           //
//                                   Created by Ilung Pranata                                                    //
//                                  Date created: 12-May-2013                                                    //
// This form is used to show the knowledge map generated by the CourseNode.aspx form. In addition, this form also//
// save the knowledge map image in the database.                                                                 // 

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;

public partial class saveMap : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {

    }
    protected void btnSave_Click(object sender, EventArgs e)
    {
        if (Session["ImageData"] != null && Session["NodesLocation"] != null)
        {
            saveMapToDB();
            saveNodesLocation();

            // Show Success Javascript message
            System.Web.HttpContext.Current.Response.Write("<SCRIPT LANGUAGE='JavaScript'>");
            System.Web.HttpContext.Current.Response.Write("alert('Knowlege map has been stored in the database.')");
            System.Web.HttpContext.Current.Response.Write("</SCRIPT>");

            //enable button for adding another topic to course
            btnAddTopic.Visible = true;
            btnFinish.Visible = true;
            btnSave.Enabled = false;
        }//end if
        else
        {
            // Show Success Javascript message
            System.Web.HttpContext.Current.Response.Write("<SCRIPT LANGUAGE='JavaScript'>");
            System.Web.HttpContext.Current.Response.Write("alert('Error: No Course or Topic to save!')");
            System.Web.HttpContext.Current.Response.Write("</SCRIPT>");
        }
    }

    private void saveMapToDB()
    {
        Byte[] imageByte = (Byte[])Session["imageData"];
        SqlConnection conStr = new SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["connString"].ConnectionString);
        try
        {
            conStr.Open();
            //save image to topic table in the database
            SqlCommand cmd = new SqlCommand("UPDATE Topic SET img_data = @img_data, img_contenttype = @img_contenttype WHERE Topic_id = @topicID", conStr);
            SqlParameter p1 = new SqlParameter("@img_data", SqlDbType.Image);
            p1.Value = imageByte;
            SqlParameter p2 = new SqlParameter("@img_contenttype", "image/jpeg");
            SqlParameter p3 = new SqlParameter("@topicID", Convert.ToInt32(Session["TopicID"]));
            cmd.Parameters.Add(p1);
            cmd.Parameters.Add(p2);
            cmd.Parameters.Add(p3);
            cmd.ExecuteNonQuery();

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
        finally
        {
            //close sql connection
            conStr.Close();
        }
    }

    private void saveNodesLocation()
    {
        //{0} NodeID, {1} startX, {2} endX, {3} startY, {4} endY
        List<String> nodesLocation = (List<String>)Session["NodesLocation"];
        SqlConnection conStr = new SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["connString"].ConnectionString);
        try
        {
            conStr.Open();

            for (int i = 0; i < nodesLocation.Count; i++)
            {
                //get node Info (id and name)
                String[] nodeInfo = nodesLocation[i].ToString().Split(';');
                SqlCommand cmd = new SqlCommand("UPDATE NodeOnTopic SET NodeLocation = @loc " +
                                 "WHERE (Node_Id = @nodeId) AND (Topic_Id = @topicId)", conStr);
                SqlParameter p2 = new SqlParameter("@topicId", Convert.ToInt32(Session["TopicID"]));
                SqlParameter p3 = new SqlParameter("@nodeId", Convert.ToInt32(nodeInfo[0]));
                SqlParameter p4 = new SqlParameter("@loc", nodeInfo[1] + ";" + nodeInfo[2] + ";" + nodeInfo[3] + ";" + nodeInfo[4]);
                cmd.Parameters.Add(p2);
                cmd.Parameters.Add(p3);
                cmd.Parameters.Add(p4);

                cmd.ExecuteNonQuery();
            }

            //close sql connection
            conStr.Close();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
        finally
        {
            conStr.Close();
        }
    }
    protected void btnAddTopic_Click(object sender, EventArgs e)
    {
        int courseID = Convert.ToInt32(Session["CourseID"]);
        Session.Clear();

        Session["CourseID"] = courseID;
        Response.Redirect("~/addTopic.aspx");
    }
    protected void btnFinish_Click(object sender, EventArgs e)
    {
        Session.Abandon();
        Response.Redirect("~/mainPage.aspx");
    }
}